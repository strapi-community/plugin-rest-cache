import{_ as e,c as i,o as s,af as t}from"./chunks/framework.CBsWK142.js";const k=JSON.parse('{"title":"Services","description":"","frontmatter":{"title":"Services"},"headers":[],"relativePath":"guide/api/index.md","filePath":"guide/api/index.md","lastUpdated":1690362947000}'),h={name:"guide/api/index.md"};function n(l,a,d,c,r,p){return s(),i("div",null,a[0]||(a[0]=[t('<h1 id="services" tabindex="-1">Services <a class="header-anchor" href="#services" aria-label="Permalink to &quot;Services&quot;">​</a></h1><p>This plugin exposes a few services that can be used to interact with the cache.</p><h2 id="cacheconfig" tabindex="-1">cacheConfig <a class="header-anchor" href="#cacheconfig" aria-label="Permalink to &quot;cacheConfig&quot;">​</a></h2><p>This service is used to interact with the plugin configuration.</p><h3 id="getuids" tabindex="-1"><code>getUids()</code> <a class="header-anchor" href="#getuids" aria-label="Permalink to &quot;`getUids()`&quot;">​</a></h3><p>Get all uid of cached contentTypes</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> uids</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strapi.plugins[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rest-cache&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].services.cacheConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUids</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h3 id="getrelatedcacheduid-uid" tabindex="-1"><code>getRelatedCachedUid(uid)</code> <a class="header-anchor" href="#getrelatedcacheduid-uid" aria-label="Permalink to &quot;`getRelatedCachedUid(uid)`&quot;">​</a></h3><p>Return the intersection of cached contentTypes and the related contentTypes of a given contentType uid</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> relatedUids</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strapi.plugins[</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;rest-cache&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].services.cacheConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRelatedCachedUid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;api::article.article&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="get-uid" tabindex="-1"><code>get(uid)</code> <a class="header-anchor" href="#get-uid" aria-label="Permalink to &quot;`get(uid)`&quot;">​</a></h3><p>Get related <code>CacheContentTypeConfig</code> with an uid</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> contentTypeConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strapi.plugins[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rest-cache&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].services.cacheConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;api::article.article&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="getcachekeysregexp-uid-params-wildcard" tabindex="-1"><code>getCacheKeysRegexp(uid, params, wildcard)</code> <a class="header-anchor" href="#getcachekeysregexp-uid-params-wildcard" aria-label="Permalink to &quot;`getCacheKeysRegexp(uid, params, wildcard)`&quot;">​</a></h3><p>Get regexs to match all <code>CacheContentTypeConfig</code> keys with given params</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> regExps</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strapi.plugins[</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;rest-cache&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].services.cacheConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getCacheKeysRegexp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;api::article.article&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  lang: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;en&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h3 id="iscached" tabindex="-1"><code>isCached()</code> <a class="header-anchor" href="#iscached" aria-label="Permalink to &quot;`isCached()`&quot;">​</a></h3><p>Check if a cache configuration exists for a contentType uid</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> isContentTypeCached</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> strapi.plugins[</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;rest-cache&quot;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].services.cacheConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isCached</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;api::article.article&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="cachestore" tabindex="-1">cacheStore <a class="header-anchor" href="#cachestore" aria-label="Permalink to &quot;cacheStore&quot;">​</a></h2><p>This service is used to interact with the cache store.</p><h3 id="get-key" tabindex="-1"><code>get(key)</code> <a class="header-anchor" href="#get-key" aria-label="Permalink to &quot;`get(key)`&quot;">​</a></h3><h3 id="set-key-val-maxage" tabindex="-1"><code>set(key, val, maxAge)</code> <a class="header-anchor" href="#set-key-val-maxage" aria-label="Permalink to &quot;`set(key, val, maxAge)`&quot;">​</a></h3><h3 id="del-key" tabindex="-1"><code>del(key)</code> <a class="header-anchor" href="#del-key" aria-label="Permalink to &quot;`del(key)`&quot;">​</a></h3><h3 id="keys" tabindex="-1"><code>keys()</code> <a class="header-anchor" href="#keys" aria-label="Permalink to &quot;`keys()`&quot;">​</a></h3><h3 id="reset" tabindex="-1"><code>reset()</code> <a class="header-anchor" href="#reset" aria-label="Permalink to &quot;`reset()`&quot;">​</a></h3><h3 id="init" tabindex="-1"><code>init()</code> <a class="header-anchor" href="#init" aria-label="Permalink to &quot;`init()`&quot;">​</a></h3><h3 id="ready" tabindex="-1"><code>ready</code> <a class="header-anchor" href="#ready" aria-label="Permalink to &quot;`ready`&quot;">​</a></h3><h3 id="clearbyregexp-regexps" tabindex="-1"><code>clearByRegexp(regExps)</code> <a class="header-anchor" href="#clearbyregexp-regexps" aria-label="Permalink to &quot;`clearByRegexp(regExps)`&quot;">​</a></h3><h3 id="clearbyuid-uid-params-wildcard" tabindex="-1"><code>clearByUid(uid, params, wildcard)</code> <a class="header-anchor" href="#clearbyuid-uid-params-wildcard" aria-label="Permalink to &quot;`clearByUid(uid, params, wildcard)`&quot;">​</a></h3>',30)]))}const g=e(h,[["render",n]]);export{k as __pageData,g as default};
