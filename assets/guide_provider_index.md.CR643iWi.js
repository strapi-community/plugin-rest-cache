import{_ as s,c as e,o as a,af as n}from"./chunks/framework.CBsWK142.js";const k=JSON.parse('{"title":"Cache provider configuration","description":"","frontmatter":{"title":"Cache provider configuration"},"headers":[],"relativePath":"guide/provider/index.md","filePath":"guide/provider/index.md","lastUpdated":1758132556000}'),t={name:"guide/provider/index.md"};function r(h,i,l,o,p,d){return a(),e("div",null,i[0]||(i[0]=[n(`<h1 id="cache-provider-configuration" tabindex="-1">Cache provider configuration <a class="header-anchor" href="#cache-provider-configuration" aria-label="Permalink to &quot;Cache provider configuration&quot;">​</a></h1><p>By default, the <strong>@strapi-community/plugin-rest-cache</strong> use <strong>@strapi-community/provider-rest-cache-memory</strong> which is an in-memory provider. It&#39;s not persisted and will be lost when the server restarts.</p><p>Alternatively, you can use:</p><ul><li><strong>@strapi-community/provider-rest-cache-redis</strong> which is a bridge between the cache plugin and the <a href="https://github.com/strapi-community/plugin-redis" target="_blank" rel="noreferrer">@strapi-community/plugin-redis</a></li><li>Your custom provider</li></ul><p>You have to set the provider name in the plugin configuration so it will be initialized once the plugin is bootstrapped. At this time only one provider can be used at a time.</p><p>You can also set the provider <code>getTimeout</code> which is the time in milliseconds to wait for the provider to respond, <strong>if the provider is not responding, the cache will be considered as a miss</strong>.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// file: /config/plugins.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">module</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exports</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ({</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &#39;rest-cache&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    config: {</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      provider: </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* @type {Provider} */</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // name can be an alias:</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;my-provider&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// try to require &#39;strapi-provider-rest-cache-my-provider&#39;</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // a full package name:</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@org/my-cache-provider&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// try to require &#39;@org/my-cache-provider&#39;</span></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // or a relative path:</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../path/to/my-provider&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line highlighted"><wbr></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // provider options</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        getTimeout: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// in milliseconds (default: 500)</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        options: {},</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      strategy: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>Note that each provider has its own configuration, so you will have to refer to the provider documentation to know how to configure it.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Check the <a href="./memory.html">memory</a> or <a href="./redis.html">redis</a> documentation for more details for advanced provider configuration.</p></div><h2 id="provider-reference" tabindex="-1"><code>Provider</code> reference <a class="header-anchor" href="#provider-reference" aria-label="Permalink to &quot;\`Provider\` reference&quot;">​</a></h2><h3 id="name" tabindex="-1"><code>name</code> <a class="header-anchor" href="#name" aria-label="Permalink to &quot;\`name\`&quot;">​</a></h3><p>The name of the provider.<br> Will try to load the package with <code>strapi-rest-cache-provider-&lt;name&gt;</code> and fallback with <code>&lt;name&gt;</code>, so you can either use a package name or an absolute path.</p><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>&#39;memory&#39;</code></li></ul><h3 id="gettimeout" tabindex="-1"><code>getTimeout</code> <a class="header-anchor" href="#gettimeout" aria-label="Permalink to &quot;\`getTimeout\`&quot;">​</a></h3><p>Time in milliseconds to wait for the provider to respond on cache lookup requests, if the provider is not responding, the cache will be considered as a miss</p><ul><li><strong>Type:</strong> <code>number</code></li><li><strong>Default:</strong> <code>500</code></li></ul><h3 id="options" tabindex="-1"><code>options</code> <a class="header-anchor" href="#options" aria-label="Permalink to &quot;\`options\`&quot;">​</a></h3><p>Object passed to the provider constructor.</p><ul><li><strong>Type:</strong> <code>any</code></li><li><strong>Default:</strong> <code>{}</code></li></ul>`,19)]))}const g=s(t,[["render",r]]);export{k as __pageData,g as default};
